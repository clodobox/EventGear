services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: eventgear
      POSTGRES_PASSWORD: eventgear2024secure
      POSTGRES_DB: eventgear
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U eventgear"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: postgresql://eventgear:eventgear2024secure@db:5432/eventgear
      POSTGRES_USER: eventgear
      POSTGRES_PASSWORD: eventgear2024secure
      POSTGRES_DB: eventgear
      POSTGRES_HOST: db
      SECRET_KEY: MedXmw987848920478HFhefbnfncnkAyhjefekjehfksajfhljlaFFccscbnmvcx998432
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend/app:/app/app

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - backend
    environment:
      NEXT_PUBLIC_API_URL: http://backend:8000

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend

volumes:
  postgres_data:
